{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlckd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Boot-camp-Study\\\\\\uD2F1\\uD0DD\\uD1A0(React)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(i)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  function makeBoard() {\n    const makeRows = [];\n    for (let i = 0; i < 9; i += 3) {\n      const makeSquares = [];\n      for (let j = i; j < i + 3; j++) {\n        makeSquares.push( /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[j],\n          onSquareClick: () => handleClick(j)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this));\n      }\n      makeRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: makeSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this));\n    }\n    return makeRows;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), makeBoard()]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [lineUp, setLineUp] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function moveList() {\n    if (lineUp) {\n      return history.map((squares, move) => {\n        let description;\n        if (move > 0) {\n          description = 'Go to move #' + move;\n        } else {\n          description = 'Go to game start';\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => jumpTo(move),\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return history.reverse().map((squares, move) => {\n        let description;\n        if (move > 0) {\n          description = 'Go to move #' + move;\n        } else {\n          description = 'Go to game start';\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => jumpTo(move),\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this);\n      });\n    }\n  }\n  function linedUp() {\n    setLineUp(!lineUp);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Your turn Now: #\", currentMove]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"timeMachine\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: linedUp,\n          children: \"\\u2191\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), moveList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"dSwyGXpjf8OJy4Vqo7c3zHSKZ4c=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","makeBoard","makeRows","makeSquares","j","push","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","lineUp","setLineUp","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moveList","map","move","description","reverse","linedUp","_c3","lines","a","b","c","$RefreshReg$"],"sources":["C:/Users/dlckd/OneDrive/바탕 화면/Boot-camp-Study/틱택토(React)/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Square({ value, onSquareClick }) {\r\n  return (\r\n  <button className=\"square\" onClick={onSquareClick}>\r\n    {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Board({ xIsNext, squares, onPlay }) {\r\n  function handleClick(i) {\r\n    if (squares[i] || calculateWinner(i)) {\r\n      return;\r\n    }\r\n    const nextSquares = squares.slice();\r\n    if (xIsNext) {\r\n      nextSquares[i] = \"X\";\r\n    } else {\r\n      nextSquares[i] = \"O\";\r\n    }\r\n    onPlay(nextSquares);\r\n  }\r\n\r\n  const winner = calculateWinner(squares);\r\n  let status;\r\n  if (winner) {\r\n    status = \"Winner: \" + winner;\r\n  } else {\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  }\r\n\r\n  function makeBoard() {\r\n    const makeRows = [];\r\n    for (let i = 0; i < 9; i += 3) {\r\n      const makeSquares = [];\r\n\r\n      for (let j = i; j < i + 3; j++) {\r\n        makeSquares.push(\r\n          <Square value={squares[j]} onSquareClick={() => handleClick(j)} />\r\n        );\r\n      }\r\n      makeRows.push(<div className=\"board-row\">{makeSquares}</div>);\r\n    }\r\n    return makeRows;\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <div className=\"status\">{status}</div>\r\n    {makeBoard()}\r\n  </>\r\n  );\r\n}\r\nexport default function Game() {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [currentMove, setCurrentMove] = useState(0);\r\n  const [lineUp, setLineUp] = useState(true);\r\n  const xIsNext = currentMove % 2 === 0;\r\n  const currentSquares = history[currentMove];\r\n\r\n  function handlePlay(nextSquares) {\r\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares]\r\n    setHistory(nextHistory);\r\n    setCurrentMove(nextHistory.length - 1);\r\n  }\r\n\r\n  function jumpTo(nextMove) {\r\n    setCurrentMove(nextMove);\r\n  }\r\n  function moveList() {\r\n    if (lineUp) {\r\n      return history.map((squares, move) => {\r\n        let description;\r\n        if (move > 0) {\r\n          description = 'Go to move #' + move;\r\n        } else {\r\n          description = 'Go to game start';\r\n        }\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => jumpTo(move)}>{description}</button>\r\n          </li>\r\n        );\r\n      });\r\n  } else {\r\n    return history.reverse().map((squares, move) => {\r\n      let description;\r\n      if (move > 0) {\r\n        description = 'Go to move #' + move;\r\n      } else {\r\n        description = 'Go to game start';\r\n      }\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{description}</button>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n  }\r\n\r\n  function linedUp() {\r\n    setLineUp(!lineUp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay}/>\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>\r\n          Your turn Now: #{currentMove}\r\n        </div>\r\n        <ol className=\"timeMachine\">\r\n          <button onClick={linedUp}>\r\n          ↑↓\r\n          </button>\r\n          {moveList()}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}